# This script will 
# -> clone pythonsollya from INRIA's gforge
# -> populate submodules of metalibm-lugdunum
# -> download and install Sollya into $PWD/local_instqll
# -> build pythonsollya python module and install into local_install
# -> generate script to setup environement into $PWD/local_install/metalibm_setup_env.bash

# Installing Requirements (On apt-able systems)
# sudo apt-get install python-dev libmpfr-dev libfplll-dev libmpfi-dev libgmp-dev libxml2-dev

# For standard users
# execute:
# sh INSTALL

# For Developers:
# execut:e
# LOGIN=<inria gforge login> sh INSTALL
# to populate the repository and its submodule with push capabilities enabled


# INSTALLATION DIRECTORIES
LOCAL_DIR=$PWD
INSTALL_DIR=$PWD/local_install

# testing if LOGIN is set, if so patch the repo to allow future pushes
if [ -n "$LOGIN" ];
then
  git remote set-url origin git+ssh://${LOGIN}@scm.gforge.inria.fr//gitroot/metalibm/metalibm-lugdunum.git && 
  git config submodule.metalibm-lugdunum-core.url git+ssh://${LOGIN}@scm.gforge.inria.fr//gitroot/metalibm/metalibm-lugdunum-core.git && 
  git config submodule.metalibm-lugdunum-functions.url git+ssh://${LOGIN}@scm.gforge.inria.fr//gitroot/metalibm/metalibm-lugdunum-functions.git || exit 1
fi;

# testing if branch is set, if so checkout a specific branch before populating the repo
if [ -n "$BRANCH" ];
then
  git checkout $BRANCH;
fi;

git submodule update --init --recursive && \
cd $LOCAL_DIR && \
mkdir -p $INSTALL_DIR || exit 1

# if SOLLYA is already installed, change this variable to indicate the install 
# containing both include and lib dirs where sollya can be found
SOLLYA_INSTALL_DIR=$INSTALL_DIR
# comment the following lines to use already installed sollya
wget https://gforge.inria.fr/frs/download.php/33151/sollya-4.1.tar.gz && \
tar -xzf sollya-4.1.tar.gz && \
cd sollya-4.1/ && ./configure --prefix=$INSTALL_DIR && make -j 4 && make install  || exit 1

# building and installing pythonsollya
cd $LOCAL_DIR && \
git clone https://gforge.inria.fr/git/metalibm/pythonsollya.git && \
cd pythonsollya/ && LOCAL_INSTALL_DIR=$SOLLYA_INSTALL_DIR python setup.py build && python setup.py install --prefix $INSTALL_DIR  && \
cd $LOCAL_DIR && \
LOCAL_PYTHON_PATH=$(find $INSTALL_DIR -name pythonsollya | sed -e "s/pythonsollya//") && \
echo "DIR=\$( cd \"\$( dirname \"\${BASH_SOURCE[0]}\" )\" && pwd ) \n export PYTHONPATH=\$DIR:$LOCAL_PYTHON_PATH:$PYTHONPATH" >> $LOCAL_DIR/metalibm_setup_env.bash  || exit 1

# USAGE EXAMPLE from the metalibm-lugdunum directory
# source metalibm_setup_env.bash
# python functions/ml_exp.py --target x86_fma --output x86_fma_exp2d.c
# python functions/ml_exp.py --disable-fma --target x86_sse41 --output x86_sse41_exp2d.c

